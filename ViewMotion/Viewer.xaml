<Window x:Class="ViewMotion.Viewer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ViewMotion"
        xmlns:converters="clr-namespace:ViewMotion.Converters" xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Viewer" Height="900" Width="1500" KeyDown="Window_KeyDown">
    <Window.Resources>
        <Style TargetType="DockPanel" x:Key="Control">
            <Setter Property="Width" Value="200" />
        </Style>
        <Style TargetType="Border" x:Key="Color">
            <Setter Property="Height" Value="21"/>
            <Setter Property="Width" Value="21"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Margin" Value="3 0 0 0" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5 5 5 0"></Setter>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Margin" Value="5 5 5 0"></Setter>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="5 5 5 0"></Setter>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5 5 5 0"></Setter>
        </Style>
        <Style TargetType="Slider">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="5 10 5 0"></Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:BooleanToVisibilityInverseConverter x:Key="BoolToVisRev"/>
    </Window.Resources>
    <DockPanel Background="{Binding BackgroundColorBrush}" MouseDown="DockPanel_MouseDown">
        <DockPanel Name="ControlPanel" Style="{StaticResource Control}" DockPanel.Dock="Left" Visibility="{Binding IsControlPanelVisible, Converter={StaticResource BoolToVis}}">
            <CheckBox DockPanel.Dock="Top" HorizontalAlignment="Center" IsChecked="{Binding Path=IsControlPanelVisible, Mode=TwoWay}" Visibility="{Binding IsControlPanelVisible, Converter={StaticResource BoolToVis}}"></CheckBox>
            <Label DockPanel.Dock="Top" Content="{Binding FrameInfo}" />
            <Button DockPanel.Dock="Top" Command="{Binding CalcCommand}" Content="{Binding CalcName}" IsEnabled="{Binding CanCalc}" />
            <Button DockPanel.Dock="Top" Command="{Binding ReplayCommand}" Content="{Binding ReplayName}"/>
            <Slider DockPanel.Dock="Top" Value="{Binding FrameNumber, Mode=TwoWay}" Minimum="0" Maximum="{Binding FrameMaxNumber}" ></Slider>
            <ComboBox  DockPanel.Dock="Top" ItemsSource="{Binding Animations}" SelectedIndex="{Binding AnimationIndex, Mode=TwoWay}" />
            <CheckBox DockPanel.Dock="Top" HorizontalAlignment="Left" IsChecked="{Binding Path=IsAutoReplay, Mode=TwoWay}">Auto replay</CheckBox>
            <CheckBox DockPanel.Dock="Top" HorizontalAlignment="Left" IsChecked="{Binding Path=IsReverseReplay, Mode=TwoWay}">With reverse</CheckBox>
            <DockPanel DockPanel.Dock="Top">
                <Label DockPanel.Dock="Left">Speed</Label>
                <Slider DockPanel.Dock="Left" Value="{Binding Speed, Mode=TwoWay}"></Slider>
            </DockPanel>
            <DockPanel DockPanel.Dock="Top">
                <Label DockPanel.Dock="Left">Lights</Label>
                <Slider DockPanel.Dock="Left" Value="{Binding Light, Mode=TwoWay}"></Slider>
            </DockPanel>
            <Button DockPanel.Dock="Top" Command="{Binding ChangeBcCommand}" Content="{Binding ChangeBcName}"/>
            <DockPanel DockPanel.Dock="Top" Margin="3 5 0 5">
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" Background="{Binding Path=SavedColorBrushes[0]}" MouseDown="Border_MouseDown" x:Name="b0"/>
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" Background="{Binding Path=SavedColorBrushes[1]}" MouseDown="Border_MouseDown" x:Name="b1" />
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" Background="{Binding Path=SavedColorBrushes[2]}" MouseDown="Border_MouseDown" x:Name="b2" />
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" Background="{Binding Path=SavedColorBrushes[3]}" MouseDown="Border_MouseDown" x:Name="b3" />
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" Background="{Binding Path=SavedColorBrushes[4]}" MouseDown="Border_MouseDown" x:Name="b4" />
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" Background="{Binding Path=SavedColorBrushes[5]}" MouseDown="Border_MouseDown" x:Name="b5" />
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" Background="{Binding Path=SavedColorBrushes[6]}" MouseDown="Border_MouseDown" x:Name="b6" />
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" Background="{Binding Path=SavedColorBrushes[7]}" MouseDown="Border_MouseDown" x:Name="b7" />
                <Border Style="{StaticResource Color}" DockPanel.Dock="Left" BorderBrush="Transparent" Background="Transparent" />
            </DockPanel>
            <Button DockPanel.Dock="Top" Command="{Binding RestoreCameraCommand}" Content="{Binding RestoreCameraName}"/>
            <Button DockPanel.Dock="Top" Command="{Binding ExportCommand}" Content="{Binding ExportName}" Margin="5 50 5 0"/>
            <ComboBox  DockPanel.Dock="Top" ItemsSource="{Binding HtmlTemplates}" SelectedIndex="{Binding HtmlIndex, Mode=TwoWay}" />
            <Button DockPanel.Dock="Top" Command="{Binding ExportHtmlCommand}" Content="{Binding ExportHtmlName}"/>
        </DockPanel>
        <Grid>
            <CheckBox HorizontalAlignment="Left" DockPanel.Dock="Top" IsChecked="{Binding Path=IsControlPanelVisible, Mode=TwoWay}" Visibility="{Binding IsControlPanelVisible, Converter={StaticResource BoolToVisRev}}" Background="{Binding BackgroundColorBrush}"></CheckBox>
            <Viewbox Name="DrawArea">
                <Canvas Name="Canvas" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Viewport3D Name="AnimatedObject"
                                ClipToBounds="True" 
                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Camera ="{Binding Camera}"
                                Canvas.Left="0" Canvas.Top="0">
                    </Viewport3D>
                </Canvas>
            </Viewbox>
            <colorpicker:StandardColorPicker 
                Width="271" Height="416"                 
                MouseDown="StandardColorPicker_MouseDown"
                MouseMove="StandardColorPicker_MouseMove"
                SecondColorState="{Binding Path=BackgroundSecondColorState, Mode=TwoWay}"
                ColorState="{Binding Path=BackgroundColorState, Mode=TwoWay}" 
                Visibility="{Binding IsColorPickerVisible, Converter={StaticResource BoolToVis}}" />
        </Grid>
    </DockPanel>
</Window>
